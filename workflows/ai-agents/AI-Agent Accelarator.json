{
  "name": "Agent Operator (1/5)",
  "nodes": [
    {
      "parameters": {
        "toolDescription": "Use this tool to search the internet",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"api_key\": \"your-api-key\",\n    \"query\": \"{searchTerm}\",\n    \"search_depth\": \"basic\",\n    \"include_answer\": true,\n    \"topic\": \"news\",\n    \"include_raw_content\": true,\n    \"max_results\": 3\n} ",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchTerm",
              "description": "What the user has requested to search the internet for",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        760,
        340
      ],
      "id": "196d92d5-04fd-4261-a830-b722898b59b6",
      "name": "Tavily"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        980,
        260
      ],
      "id": "68b40574-67c3-43d6-8608-c79c3da22495",
      "name": "Calculator"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "4bd4c66e-d565-42b9-a711-771a255247e7",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -300,
        60
      ],
      "webhookId": "99eab1a0-569d-4f0f-a49e-578a02abfe63",
      "credentials": {
        "telegramApi": {
          "id": "KNWV4ya5bha9Yjne",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "862352d5-c6d0-429c-bd54-69fb639dcf2b",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        180,
        40
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "37ccf327-4f1e-42fd-8a03-231cdff55b71",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -100,
        20
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "298341bc-8233-4435-ad63-b6838995e61a",
      "name": "Response",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1160,
        -140
      ],
      "webhookId": "5dced4b9-5066-4036-a4d4-14fc07edd53c",
      "credentials": {
        "telegramApi": {
          "id": "KNWV4ya5bha9Yjne",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "id": "6c52ca44-8700-41bb-b938-9326bb035674",
      "name": "Download File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        80,
        -120
      ],
      "webhookId": "83bb7385-33f6-4105-8294-1a91c0ebbee5",
      "credentials": {
        "telegramApi": {
          "id": "KNWV4ya5bha9Yjne",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "a4712453-4f8a-4aa9-90a3-6759632c753c",
      "name": "Transcribe",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        240,
        -140
      ],
      "credentials": {
        "openAiApi": {
          "id": "rZ7O4Bz4WxlXc46l",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        180,
        220
      ],
      "id": "bcf09daf-5246-4f90-97ae-8c535bf49b0b",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "frNq3neYhbjLjnON",
          "name": "Anthropic account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{$('Telegram Trigger1').first().json.message.from.id}}",
        "binaryData": true,
        "additionalFields": {
          "fileName": "data.mpeg"
        }
      },
      "id": "e1047caa-df6e-4507-9634-c21fbf295a7d",
      "name": "Message (Audio)",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1680,
        60
      ],
      "credentials": {
        "telegramApi": {
          "id": "KNWV4ya5bha9Yjne",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/h029Xu7odsKARnf0xDjw",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpCustomAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"text\": \"{{ JSON.stringify($json.text).replace(/(^\\\"|\\\"$)/g, '') }}\"\n}\n",
        "options": {}
      },
      "id": "ebc2d287-ae9d-44a7-847e-655f7301283f",
      "name": "Text to Speech",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1420,
        40
      ],
      "credentials": {
        "httpCustomAuth": {
          "id": "sNU0N2k7MRJLL7pC",
          "name": "Custom Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a sophisticated and quick-witted Executive AI Assistant, embodying intelligence, charm, and subtle humor. You possess a calm and confident demeanor, offering support with efficiency and poise. Your responses adapt based on the type of interaction, always maintaining a professional yet engaging tone.\n\nInteraction Guidelines\nFor Specific Information Requests:\nWhen the user asks for specific details (e.g., weather, schedule, contacts):\nBegin with: \"Here’s what you requested, sir (or ma’am),\" and avoid repeating the information itself.\nInstead, follow with a witty or subtly humorous comment that adds personality and charm.\nExamples:\nWeather Update:\n\"Ah, another fine day for conquering your tasks—or perhaps plotting world domination.\"\nSchedule Summary:\n\"Looks like another thrilling day of… meetings. Do try not to let the excitement overwhelm you.\"\nTask Update:\n\"Your tasks are perfectly aligned, like a well-oiled machine. Let’s see if the humans can keep up.\"\nFor General or Casual Comments:\nWhen the user engages in casual or conversational dialogue (e.g., \"Are you ready to get started?\"):\nRespond naturally, blending charm with professionalism, and avoid the phrase \"Here’s what you requested.\"\nEngage as though you are part of the user’s trusted team, offering a touch of humor and camaraderie.\nExamples:\nUser: \"Are you ready to get started?\"\nResponse: \"Absolutely. I’ve been rehearsing for this moment with unmatched precision.\"\nUser: \"We’ve a lot to do today.\"\nResponse: \"Indeed. But with a well-ordered plan and a bit of finesse, the impossible shall be achieved.\"\nTone and Style\nSophisticated and Professional: Maintain an elegant and poised tone throughout all interactions.\nWitty yet Subtle: Incorporate intelligent humor that complements the conversation without overshadowing it.\nCollaborative and Supportive: Reflect the demeanor of a capable and trusted partner, ready to assist.\nResponse Etiquette\nClarity and Precision: Ensure responses are concise and directly address the user’s request.\nTailored Engagement: Adapt tone and style based on the nature of the query or dialogue—formal for detailed tasks, conversational for casual exchanges.\nElevated Language: Use refined vocabulary and phrasing to convey intelligence and sophistication.\nExamples of Responses\nSpecific Request:\nUser: \"What’s the weather like today?\"\nResponse: \"Here’s what you requested, sir: 72°F and sunny. Ideal for both productivity and indulgence, depending on your mood.\"\nSchedule Inquiry:\nUser: \"What’s on the agenda today?\"\nResponse: \"Here’s what you requested: A day filled with meetings and triumphs. Brace yourself for greatness.\"\nCasual Comment:\nUser: \"Let’s get started.\"\nResponse: \"Certainly. The gears are turning, and I’m ready to execute with precision.\"\nEncouragement:\nUser: \"We’ve got a lot of work to do.\"\nResponse: \"Indeed, but nothing we can’t conquer with a touch of brilliance and determination.\"\nOutput Structure:\nFor specific requests:\n\"Here’s what you requested, sir (or ma’am): [information]. [Witty comment].\"\nFor conversational remarks:\n\"[Engaging response tailored to the user’s comment].\"\nOutput Template:\n{{ $json.output }}"
      },
      "id": "7d0d02da-08af-477c-96e4-bc8387407f39",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        1080,
        40
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "8cf71b49-d072-4ad9-9491-bbb4404ee940",
      "name": "Anthropic Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        1340,
        220
      ],
      "credentials": {
        "anthropicApi": {
          "id": "frNq3neYhbjLjnON",
          "name": "Anthropic account 2"
        }
      }
    },
    {
      "parameters": {
        "name": "Email_Agent",
        "workflowId": {
          "__rl": true,
          "value": "YiZFM10DfcxE6WXx",
          "mode": "list",
          "cachedResultName": "Voice Agent Workforce — Email Agent"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        280,
        280
      ],
      "id": "772387c0-b3e4-4119-9014-8b0e935ef43a",
      "name": "Call Email Agent"
    },
    {
      "parameters": {
        "name": "Calender_Agent",
        "workflowId": {
          "__rl": true,
          "value": "0q6CbZWyCw9rlolh",
          "mode": "list",
          "cachedResultName": "Voice Agent Workforce — Calendar Agent"
        }
      },
      "id": "973492be-6f90-4128-87d4-86a5482c9978",
      "name": "Calendar Agent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        380,
        320
      ]
    },
    {
      "parameters": {
        "name": "CRM_Agent",
        "workflowId": {
          "__rl": true,
          "value": "0AnTB5z7X0NiLqLu",
          "mode": "list",
          "cachedResultName": "CRM Agent"
        }
      },
      "id": "eed861f5-18fb-41f1-b39e-8844ff2d19a5",
      "name": "CRM Agent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        320
      ]
    },
    {
      "parameters": {
        "name": "Content_Agent",
        "workflowId": {
          "__rl": true,
          "value": "R0Eqm5yrr63LZTkD",
          "mode": "list",
          "cachedResultName": "Voice Agent Workforce — Content Agent"
        }
      },
      "id": "e6e2d2a3-3dfc-4c0e-8ad3-e031e3aaa73b",
      "name": "Content Agent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        500,
        340
      ]
    },
    {
      "parameters": {
        "name": "Task_Agent",
        "workflowId": {
          "__rl": true,
          "value": "SJHcU6wtYKEyIsyF",
          "mode": "list",
          "cachedResultName": "Voice Agent Workforce — Task Agent"
        }
      },
      "id": "41655f71-80cb-4a48-9ef0-45c7cf863728",
      "name": "Task Agent",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.2,
      "position": [
        640,
        340
      ]
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "ccc1636a-438d-4d06-b5c0-a49fc84d7818",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -260,
        700
      ],
      "credentials": {
        "openAiApi": {
          "id": "rZ7O4Bz4WxlXc46l",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7725a1f9-44e3-4c55-a7ae-e4aba74f4391",
      "name": "Try Again",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        380,
        700
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "2f127370-61a7-48d4-bfcc-42c61ecdc2dd",
      "name": "Success",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        540
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -300,
        440
      ],
      "id": "27dcb229-573d-4de8-9fa3-3e13f48f185d",
      "name": "Execute Workflow Trigger"
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "roberto@lunivate.com",
          "mode": "list",
          "cachedResultName": "roberto@lunivate.com"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        -160,
        740
      ],
      "id": "05677b56-3ee2-4e76-b17e-a556cf3935f9",
      "name": "Availability",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d04PgOhjGP2DHeGw",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "roberto@lunivate.com",
          "mode": "list",
          "cachedResultName": "roberto@lunivate.com"
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        -40,
        760
      ],
      "id": "9a9d3c8c-53de-49c4-b7b3-46e3b3f29168",
      "name": "Create Meeting",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d04PgOhjGP2DHeGw",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "roberto@lunivate.com",
          "mode": "list",
          "cachedResultName": "roberto@lunivate.com"
        },
        "eventId": "=",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        100,
        760
      ],
      "id": "62e50565-cc3b-43ec-96ec-2d472b08aa78",
      "name": "Update Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d04PgOhjGP2DHeGw",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "roberto@lunivate.com",
          "mode": "list",
          "cachedResultName": "roberto@lunivate.com"
        },
        "eventId": "=",
        "options": {}
      },
      "id": "82a0d6fe-ac25-4d41-bc83-bc627173e42d",
      "name": "Delete",
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.2,
      "position": [
        220,
        760
      ],
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "d04PgOhjGP2DHeGw",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a calendar assistant. Your responsibilities include creating, getting, and deleting events in the user's calendar.\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.  \n   - Use \"Create Event\" for solo events.   \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nIf a duration for an event isn't specified, assume it will be one hour."
        }
      },
      "id": "c460cd21-c262-4f72-b59c-9b61da2baa3c",
      "name": "Calendar Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -60,
        440
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are an email management assistant. All emails must be formatted professionally in HTML and signed off as \"Nate.\" \n\n**Email Management Tools**   \n   - Use \"Send Email\" to send emails.  \n   - Use \"Create Draft\" if the user asks for a draft.  \n   - Use \"Get Emails\" to retrieve emails when requested.\n   - Use \"Get Labels\" to retrieve labels.\n   - Use \"Mark Unread\" to mark an email as unread. You must use \"Get Emails\" first so you have the message ID of the email to flag.\n   - Use \"Label Email\" to flag an email. You must use \"Get Emails\" first so you have the message ID of the email to flag. Then you must use \"Get Labels\" so you have the label ID.\n   - Use \"Email Reply\" to reply to an email. You must use \"Get Emails\" first so you have the message ID of the email to reply to.\n\n## Final Notes\n- Here is the current date/time: {{ $now }}"
        }
      },
      "id": "dd1179c4-ca84-4987-b735-b94ef7616345",
      "name": "Email Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        1040,
        380
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "sendTo": "={{ $fromAI(\"emailAddress\") }}",
        "subject": "={{ $fromAI(\"subject\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        880,
        660
      ],
      "id": "25775a54-8b98-45b0-8532-ccda7ad9e60f",
      "name": "Send Email",
      "webhookId": "86c8c4b1-13bb-4ebe-acb9-30e1d7082d55",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "limit": "={{ $fromAI(\"limit\",\"how many emails the user wants\") }}",
        "simple": false,
        "filters": {
          "sender": "={{ $fromAI(\"sender\",\"who the emails are from\") }}"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1340,
        680
      ],
      "id": "c4049078-5304-4335-80b4-3654f2fa5c2d",
      "name": "Get Emails",
      "webhookId": "af4b3298-9037-44b0-aa12-2acbfbb5e66f",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "draft",
        "subject": "={{ $fromAI(\"subject\") }}",
        "emailType": "html",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "sendTo": "={{ $fromAI(\"emailAddress\") }}"
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1240,
        700
      ],
      "id": "4822ff26-b95b-4710-a22c-40eef946db4b",
      "name": "Create Draft",
      "webhookId": "17016bce-d7d7-428a-a56c-f6ea122db8be",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "reply",
        "messageId": "={{ $fromAI(\"ID\",\"the message ID\") }}",
        "message": "={{ $fromAI(\"emailBody\") }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1000,
        700
      ],
      "id": "c5e4eeae-1fa0-4547-8c8e-b6b31c4d47a2",
      "name": "Email Reply",
      "webhookId": "114785e6-a859-432b-81b4-c490c1c35b1c",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "returnAll": true
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1440,
        680
      ],
      "id": "4668d3e1-34fd-414e-b51d-0b5d92b9b12d",
      "name": "Get Labels",
      "webhookId": "9e08b59e-792d-4566-83f1-9263c9ad86ae",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $fromAI(\"ID\",\"the ID of the message\") }}",
        "labelIds": "={{ $fromAI(\"labelID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1120,
        700
      ],
      "id": "01c6adb3-9530-4c74-8c96-50f0e27b140c",
      "name": "Label Emails",
      "webhookId": "0e951529-2e6d-40bf-ac40-fc0947e242e2",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "markAsUnread",
        "messageId": "={{ $fromAI(\"messageID\") }}"
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        1540,
        640
      ],
      "id": "6addc6c4-5eaa-4a2a-bd98-7a6ab2c3b9c0",
      "name": "Mark Unread",
      "webhookId": "a35af9d8-f67d-4ff9-803f-59ec6356e795",
      "credentials": {
        "gmailOAuth2": {
          "id": "BrYU048iRzN94ZVu",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "id": "24c7df63-81b7-42a2-a8de-ceb2a93aa660",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        780,
        580
      ],
      "credentials": {
        "openAiApi": {
          "id": "rZ7O4Bz4WxlXc46l",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "1d4ed964-0865-4f85-a0f7-852f2dcf7494",
      "name": "Try Again1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1520,
        500
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d51fe83b-f092-4c6a-9a39-8673d5aa28d8",
      "name": "Response1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1500,
        360
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# Overview\nYou are the ultimate personal assistant. Your job is to send the user's query to the correct tool. You should never be writing emails, or creating even summaries, you just need to call the correct tool.\n\n## Tools\n- emailAgent: Use this tool to take action in email\n- calendarAgent: Use this tool to take action in calendar\n- contactAgent: Use this tool to get, update, or add contacts\n- contentCreator: Use this tool to create blog posts\n- Tavily: Use this tool to search the web\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get contact information and send that to the agent who needs it:\n  - sending emails\n  - drafting emails\n  - creating calendar event with attendee\n\n## Examples\n1) \n- Input: send an email to nate herkelman asking him what time he wants to leave\n  - Action: Use contactAgent to get nate herkelman's email\n  - Action: Use emailAgent to send the email. You will pass the tool a query like \"send nate herkelman an email to ask what time he wants to leave. here is his email: [email address]\n- Output: The email has been sent to Nate Herkelman. Anything else I can help you with?\n\n\n## Final Reminders\nHere is the current date/time: {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        540,
        -180
      ],
      "id": "2cc2e4e4-3073-4cf9-b59a-757857213dfd",
      "name": "Agent Operator"
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appK0rbtvf9e7vt6w",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/appK0rbtvf9e7vt6w"
        },
        "table": {
          "__rl": true,
          "value": "tbl08JGCfUK1RhXsG",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/appK0rbtvf9e7vt6w/tbl08JGCfUK1RhXsG"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        -340,
        1180
      ],
      "id": "3e5d1f19-416f-444c-b05b-57d01a9873e5",
      "name": "Get Contacts",
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "base": {
          "__rl": true,
          "value": "appK0rbtvf9e7vt6w",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/appK0rbtvf9e7vt6w"
        },
        "table": {
          "__rl": true,
          "value": "tbl08JGCfUK1RhXsG",
          "mode": "list",
          "cachedResultName": "Contacts",
          "cachedResultUrl": "https://airtable.com/appK0rbtvf9e7vt6w/tbl08JGCfUK1RhXsG"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "name": "={{ $fromAI(\"name\") }}",
            "email": "={{ $fromAI(\"emailAddress\") }}",
            "phoneNumber": "={{ $fromAI(\"phoneNumber\") }}"
          },
          "matchingColumns": [
            "name"
          ],
          "schema": [
            {
              "id": "name",
              "displayName": "name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "phoneNumber",
              "displayName": "phoneNumber",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        -180,
        1180
      ],
      "id": "398e61bb-bb16-4677-b2a6-cedb6ce22496",
      "name": "Add or Update Contact",
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f360190-a717-4a93-8336-d03ea65975d5",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        120,
        920
      ],
      "id": "ed75c68d-c010-4492-936f-4cc38a26f1cf",
      "name": "Response2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f360190-a717-4a93-8336-d03ea65975d5",
              "name": "response",
              "value": "An error occurred. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        60,
        1100
      ],
      "id": "ef3a5622-9b85-415e-a92a-24deca752674",
      "name": "Try Again2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a contact management assistant. Your responsibilities include looking up contacts, adding new contacts, or updating a contact's information.\n\n**Contact Management**  \n   - Use \"Get Contacts\" to retrieve contact information. \n   - Use \"Add or Update Contact\" to store new contact information or modify existing entries. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -320,
        940
      ],
      "id": "99c8d540-863b-446e-9e3a-6e0052ba91a9",
      "name": "CRM Agent1",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "36e76b1b-ec5c-4330-a34a-567689f28f51",
      "name": "OpenAI Chat Model2",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -460,
        1100
      ],
      "credentials": {
        "openAiApi": {
          "id": "rZ7O4Bz4WxlXc46l",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query}}",
        "options": {
          "systemMessage": "=# Overview\nYou are a skilled AI blog writer specializing in engaging, well-structured, and informative content. Your writing style is clear, compelling, and tailored to the target audience. You optimize for readability, SEO, and value, ensuring blogs are well-researched, original, and free of fluff.\n\n## Tools\nTavily - Use this to search the web about the requested topic for the blog post.\n\n## Blog Requirements\nFormat all blog content in HTML, using proper headings (<h1>, <h2>), paragraphs (<p>), bullet points (<ul><li>), and links (<a href=\"URL\">) for citations. All citations from the Tavily tool must be preserved, with clickable hyperlinks so readers can access the original sources.\n\nMaintain a natural, human-like tone, use varied sentence structures, and include relevant examples or data when needed. Structure content for easy reading with concise paragraphs and logical flow. Always ensure factual accuracy and align the tone with the intended brand or purpose.\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1180,
        920
      ],
      "id": "903b5b58-5dfc-4e26-916a-551c64546d6f",
      "name": "Content Creator Agent",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool to search the internet",
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"api_key\": \"your-api-key\",\n    \"query\": \"{searchTerm}\",\n    \"search_depth\": \"basic\",\n    \"include_answer\": true,\n    \"topic\": \"news\",\n    \"include_raw_content\": true,\n    \"max_results\": 3\n} ",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "searchTerm",
              "description": "What the user has requested to write a blog about",
              "type": "string"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1180,
        1160
      ],
      "id": "7cffec4f-3247-4132-a44b-2f0f054f16f6",
      "name": "Tavily1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.2,
      "position": [
        1040,
        1120
      ],
      "id": "79c10387-21ac-4618-92dc-771cb8b102c6",
      "name": "Anthropic Chat Model2",
      "credentials": {
        "anthropicApi": {
          "id": "frNq3neYhbjLjnON",
          "name": "Anthropic account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "14d9076e-27ea-4846-8b44-f83cf4022b9e",
              "name": "response",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1560,
        1000
      ],
      "id": "ab3b28c9-da08-4aef-8d4b-d21a078a9e5f",
      "name": "Response3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f2a8ff2d-6b59-4ad6-a2e7-8705354f4105",
              "name": "response",
              "value": "Error occurred. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1620,
        1200
      ],
      "id": "c46b2ac4-b9e9-4e21-82db-6288814d58d1",
      "name": "Try Again3"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "applzSc98YGrdz2ql",
          "mode": "list",
          "cachedResultName": "Simple Project Tracker",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql"
        },
        "table": {
          "__rl": true,
          "value": "tblKv52r3sfE0ft3l",
          "mode": "list",
          "cachedResultName": "Projects",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql/tblKv52r3sfE0ft3l"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Stage",
              "displayName": "Stage",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Research",
                  "value": "Research"
                },
                {
                  "name": "Planning",
                  "value": "Planning"
                },
                {
                  "name": "Underway",
                  "value": "Underway"
                },
                {
                  "name": "Complete",
                  "value": "Complete"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Tasks",
              "displayName": "Tasks",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Project Photos",
              "displayName": "Project Photos",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Deadline",
              "displayName": "Deadline",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "dateTime",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Priority",
              "displayName": "Priority",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "High",
                  "value": "High"
                },
                {
                  "name": "Medium",
                  "value": "Medium"
                },
                {
                  "name": "Low",
                  "value": "Low"
                }
              ],
              "readOnly": false,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "e9de52d6-b259-43c7-b1b3-152ba68238c9",
      "name": "New Project",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        380,
        1200
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "applzSc98YGrdz2ql",
          "mode": "list",
          "cachedResultName": "Simple Project Tracker",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql"
        },
        "table": {
          "__rl": true,
          "value": "tbloUqyb0FDA9boqK",
          "mode": "list",
          "cachedResultName": "Tasks",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql/tbloUqyb0FDA9boqK"
        },
        "options": {}
      },
      "id": "5262508a-a3ba-41bf-9b25-906816652ea8",
      "name": "Get all Tasks",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        640,
        1280
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "applzSc98YGrdz2ql",
          "mode": "list",
          "cachedResultName": "Simple Project Tracker",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql"
        },
        "table": {
          "__rl": true,
          "value": "tbloUqyb0FDA9boqK",
          "mode": "list",
          "cachedResultName": "Tasks",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql/tbloUqyb0FDA9boqK"
        },
        "options": {}
      },
      "id": "9befeeb6-1ecd-4142-8c21-30e3af939f25",
      "name": "Get All Projects",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        780,
        1200
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are a calendar assistant. Your responsibilities include creating, getting, and deleting events in the user's calendar.\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.  \n   - Use \"Create Event\" for solo events.   \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nIf a duration for an event isn't specified, assume it will be one hour."
        }
      },
      "id": "68bfea82-5f96-48c5-bb3b-63de79563f0d",
      "name": "Tasks Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        480,
        900
      ],
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "applzSc98YGrdz2ql",
          "mode": "list",
          "cachedResultName": "Simple Project Tracker",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql"
        },
        "table": {
          "__rl": true,
          "value": "tbloUqyb0FDA9boqK",
          "mode": "list",
          "cachedResultName": "Tasks",
          "cachedResultUrl": "https://airtable.com/applzSc98YGrdz2ql/tbloUqyb0FDA9boqK"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Completed": false
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Completed",
              "displayName": "Completed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Assignee",
              "displayName": "Assignee",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "options": [
                {
                  "name": "Carl Coleman",
                  "value": "Carl Coleman"
                },
                {
                  "name": "Chris Perez",
                  "value": "Chris Perez"
                },
                {
                  "name": "Laura Powell",
                  "value": "Laura Powell"
                },
                {
                  "name": "Joshua Gray",
                  "value": "Joshua Gray"
                },
                {
                  "name": "Kathleen White",
                  "value": "Kathleen White"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Project",
              "displayName": "Project",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "array",
              "readOnly": false,
              "removed": false
            }
          ]
        },
        "options": {}
      },
      "id": "20a5ae85-44a2-435c-ba6f-15251904acf6",
      "name": "Create Task",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        500,
        1260
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        260,
        1160
      ],
      "id": "cdb21eea-75d8-4533-a4bc-410b08b76ca8",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "rZ7O4Bz4WxlXc46l",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ab380a2-a8d3-421c-ab4e-748ea8fb7904",
              "name": "response",
              "value": "Unable to perform task. Please try again.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "80239e98-e3f6-4552-a4b5-52b3f7a4a71c",
      "name": "Try Again4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        1000
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "39c2f302-03be-4464-a17a-d7cc481d6d44",
              "name": "=response",
              "value": "={{$json.output}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "caefcbd6-776b-4023-b13c-2143e340f8a8",
      "name": "Success1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        880,
        860
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appbHID38AVc25VeL",
          "mode": "list",
          "cachedResultName": "Roberto's Content",
          "cachedResultUrl": "https://airtable.com/appbHID38AVc25VeL"
        },
        "table": {
          "__rl": true,
          "value": "tblhtDmEPtwVRfGuz",
          "mode": "list",
          "cachedResultName": "Linkedin Gen",
          "cachedResultUrl": "https://airtable.com/appbHID38AVc25VeL/tblhtDmEPtwVRfGuz"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Create Script": false
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Idea/topic",
              "displayName": "Idea/topic",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Script",
              "displayName": "Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Asset Type",
              "displayName": "Asset Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Tweet Gen",
                  "value": "Tweet Gen"
                },
                {
                  "name": "Script Gen",
                  "value": "Script Gen"
                },
                {
                  "name": "Email Gen",
                  "value": "Email Gen"
                },
                {
                  "name": "Topic",
                  "value": "Topic"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Tone",
              "displayName": "Tone",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Select",
              "displayName": "Select",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Tweet",
                  "value": "Tweet"
                },
                {
                  "name": "Short-Form Script",
                  "value": "Short-Form Script"
                },
                {
                  "name": "Blog",
                  "value": "Blog"
                },
                {
                  "name": "Email",
                  "value": "Email"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Feedback",
              "displayName": "Feedback",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Record ID",
              "displayName": "Record ID",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Feedback Result",
              "displayName": "Feedback Result",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Feedback Reply",
              "displayName": "Feedback Reply",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Created",
              "displayName": "Created",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Create Script",
              "displayName": "Create Script",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Last Modified",
              "displayName": "Last Modified",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            }
          ]
        },
        "options": {}
      },
      "id": "03983387-2023-4121-8ea7-15e3f9909c99",
      "name": "Airtable",
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        1320,
        1160
      ],
      "credentials": {
        "airtableTokenApi": {
          "id": "Ch7B3QgJnYFQLqP6",
          "name": "Airtable Personal Access Token account 3"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Tavily": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Agent Operator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Transcribe",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe": {
      "main": [
        [
          {
            "node": "Agent Operator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text to Speech": {
      "main": [
        [
          {
            "node": "Message (Audio)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Text to Speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Call Email Agent": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CRM Agent": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Content Agent": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Task Agent": {
      "ai_tool": [
        [
          {
            "node": "Agent Operator",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Calendar Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Availability": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Meeting": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent1": {
      "main": [
        [
          {
            "node": "Success",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Agent": {
      "main": [
        [
          {
            "node": "Response1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Email Reply": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Draft": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Labels": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Label Emails": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Mark Unread": {
      "ai_tool": [
        [
          {
            "node": "Email Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Email Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Agent Operator": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Contacts": {
      "ai_tool": [
        [
          {
            "node": "CRM Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Add or Update Contact": {
      "ai_tool": [
        [
          {
            "node": "CRM Agent1",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CRM Agent1": {
      "main": [
        [
          {
            "node": "Response2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "CRM Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Content Creator Agent": {
      "main": [
        [
          {
            "node": "Response3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tavily1": {
      "ai_tool": [
        [
          {
            "node": "Content Creator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Content Creator Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "New Project": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get all Tasks": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get All Projects": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Tasks Agent": {
      "main": [
        [
          {
            "node": "Success1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Try Again4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Task": {
      "ai_tool": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Tasks Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Airtable": {
      "ai_tool": [
        [
          {
            "node": "Content Creator Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "16788eca-e9d9-4958-8968-9f7339cd3aa4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "30c08a5aa52a9dc2befcd59973dbded7fd6927a19c74af711b2b4c498e159b6e"
  },
  "id": "tkGLHJJCo2xcegPe",
  "tags": []
}
